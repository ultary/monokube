apiVersion: v1
kind: Secret
metadata:
  name: postgres
  labels:
    app: postgres
    org: home
immutable: true
data:
  POSTGRES_PASSWORD: {{ .Values.postgres.password }}
type: Opaque
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
    org: home
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      app: postgres
      org: home
  serviceName: postgres
  template:
    metadata:
      labels:
        app: postgres
        org: home
    spec:
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 10
      containers:
        - name: postgres
          image: {{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}
          envFrom:
            - secretRef:
                name: postgres
          livenessProbe:
            exec:
              command: [ "pg_isready", "-U", "postgres" ]
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 60
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 5432
              name: tcp
          securityContext:
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: run
              mountPath: /var/run/postgresql
      volumes:
        - name: run
          emptyDir:
            sizeLimit: 16Ki
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ 'ReadWriteOnce' ]
        #storageClassName: hostpath
        storageClassName: local-path
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
    org: home
spec:
  clusterIP: None
  ports:
    - port: 5432
      name: tcp
  selector:
    app: postgres
    org: home
---
